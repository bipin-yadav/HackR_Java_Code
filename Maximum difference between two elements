import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



class Result {

    /*
     * Complete the 'maxDifference' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY a as parameter.
     */

    public static int maxDifference(List<Integer> a) {
        // Initialize Result
        int maxDiff = -1;
        int n = a.size();
        int maxRight = a.get(n - 1);

        for (int i = n - 2; i >= 0; i--) {
            if (a.get(i) > maxRight)
                maxRight = a.get(i);
            else {
                int diff = maxRight - a.get(i);
                if (diff > maxDiff) {
                    maxDiff = diff;
                }
            }
        }
        return maxDiff;
    }

}

public class Solution {
